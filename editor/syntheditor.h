/** Minicomputer
 * industrial grade digital synthesizer
 * editorsoftware
 * Copyright 2007 Malte Steiner
 * This file is part of Minicomputer, which is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Minicomputer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef syntheditor_h
#define syntheditor_h
// generated by Fast Light User Interface Designer (fluid) version 1.0107
#include "Memory.h"

#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Input_Choice.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Tabs.H>

#include <FL/Fl_Choice.H>
#include <FL/Fl_Input_Choice.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Positioner.H>
//#include <FL/Fl_Chart.H>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <math.h>
#include <lo/lo.h>
extern lo_address t;
extern Memory Speicher;


class Fl_SteinerKnob:public Fl_Dial
{
	public:
	Fl_SteinerKnob(int x, int y, int w, int h, const char *label);//:Fl_Dial(x, y, w, h, label);
	int handle(int event);
	private:
	int altx;
};


class UserInterface {
public:
  Fl_Double_Window* make_window();
  static Fl_Menu_Item menu_pitch[];
  static Fl_Menu_Item menu_pitch1[];
  Fl_Dial *f1cut1;
  Fl_Dial *f1q1;
  Fl_Dial *f1vol1;
  Fl_Dial *f1cut2;
  Fl_Dial *f1q2;
  Fl_Dial *f1vol2;
  Fl_Dial *f2cut1;
  Fl_Dial *f2q1;
  Fl_Dial *f2vol1;
  Fl_Dial *f2cut2;
  Fl_Dial *f2q2;
  Fl_Dial *f2vol2;
  Fl_Dial *f3cut1;
  Fl_Dial *f3q1;
  Fl_Dial *f3vol1;
  Fl_Dial *f3cut2;
  Fl_Dial *f3q2;
  Fl_Dial *f3vol2;
  
  static Fl_Menu_Item menu_morph[];
  static Fl_Menu_Item menu_amod[];
  static Fl_Menu_Item menu_fmod[];
  static Fl_Menu_Item menu_wave[];
  Fl_Input_Choice*  soundchoice[8];
  Fl_Input_Choice*  multichoice;
};

#endif
